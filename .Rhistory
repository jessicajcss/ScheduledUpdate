View(output)
View(IQA_last24H)
nrow(unique(alerta$pollutant))
if ((City != "Rio Branco do Sul" | !(hoje %in% data_thermo_instantaneo$date[data_thermo_instantaneo$Cidade == "Rio Branco do Sul"])) |
(City != "Almirante Tamandaré" | !(hoje %in% data_thermo_instantaneo$date[data_thermo_instantaneo$Cidade == "Almirante Tamandaré"]))) {
out <- vector("list", length(unique(alerta$pollutant)))
} else {
out <- vector("list", nrow(IQA_last24H))  # Initialize the list
}
for (i in 1:nrow(IQA_last24H)) {
for (j in 1:length(unique(alerta$pollutant))) {
City <- Cidades[i]
print(paste("City:", City))  # Debugging
print(paste("Iteração", i, "- Cidade:", City))
if ((City != "Rio Branco do Sul" | !(hoje %in% data_thermo_instantaneo$date[data_thermo_instantaneo$Cidade == "Rio Branco do Sul"])) |
(City != "Almirante Tamandaré" | !(hoje %in% data_thermo_instantaneo$date[data_thermo_instantaneo$Cidade == "Almirante Tamandaré"]))) {
subset_alerta <- alerta |> subset(Cidade == City & pollutant == "PM2.5") |>
dplyr::mutate(concentration = round(concentration, 1))
if (nrow(subset_alerta) == 0) next  # Skip if empty
if (is.null(out[[i]])) out[[i]] <- list()  # Ensure the list exists
excede <- ifelse(rlang::is_empty(subset_alerta$limite), "não medido", subset_alerta$limite)
particulas <- 'MP2.5'
valor <- subset_alerta$concentration
registro <- unique(lubridate::ymd_hms(subset_alerta$date)) |>
lubridate::force_tz("America/Sao_Paulo") |>
format(format = "%d/%m/%Y %H:%Mh")
unidade <- " µg/m³"
iqa <- IQA_last24H$AQI[IQA_last24H$Cidade == subset_alerta$Cidade]
qualidade <- IQA_last24H$AQI_Qualidade[IQA_last24H$Cidade == subset_alerta$Cidade] |>
stringr::str_to_upper()
out[[i]]$Cidade <- subset_alerta$Cidade
current_value <- ifelse(excede >= 1, 1, 0)
message <- if (current_value >= threshold) {
paste0(
"\n🌬 Poluente: \n   ", particulas, ": ", valor, unidade,
"\n🗓 Registro: ", registro,
"\n🚨 ALERTA: Valor excede o limite recomendado!"
)
} else {
paste0(
"\n🌬 Poluente: \n   ", particulas, ": ", valor, unidade,
"\n🗓 Registro: ", registro,
"\n✅ Valor dentro do limite recomendado.\n"
)
}
out[[i]]$message <- message
} else {
subset_alerta <- alerta |> subset(Cidade == City) |>
dplyr::mutate(concentration = round(concentration, 1)) |>
dplyr::mutate(pollutant = replace(pollutant, pollutant == 'PM2.5', "MP2.5"),
pollutant = replace(pollutant, pollutant == 'PM10', "MP10"))
if (nrow(subset_alerta) == 0) next  # Skip if empty
if (is.null(out[[i]])) out[[i]] <- list()  # Ensure the list exists
excede <- sum(subset_alerta$limite, na.rm = T)
if (j > nrow(subset_alerta)) next  # Avoid out-of-bounds error
valor <- subset_alerta$concentration[j]
registro <- lubridate::ymd_hms(subset_alerta$date)[j] |>
lubridate::force_tz("America/Sao_Paulo") |>
format(format = "%d/%m/%Y %H:%Mh")
unidade <- ifelse(subset_alerta$pollutant[j] == "CO", " mg/m³", " µg/m³")
Cidade <- subset_alerta$Cidade |> unique()
iqa <- IQA_last24H$AQI[IQA_last24H$Cidade == Cidade]
qualidade <- IQA_last24H$AQI_Qualidade[IQA_last24H$Cidade == Cidade] |>
stringr::str_to_upper()
out[[i]]$Cidade <- Cidade
current_value <- ifelse(excede >= 1, 1, 0)
message <- if (current_value >= threshold) {
paste0(
"\n Poluente: \n 🌬  ", subset_alerta$pollutant[4], ":  ", subset_alerta$concentration[4], " ", unidade,
"\n 🌬  ", subset_alerta$pollutant[5], ":  ", subset_alerta$concentration[5], " ", unidade,
"\n 🌬  ", subset_alerta$pollutant[1], ":  ", subset_alerta$concentration[1], " ", unidade,
"\n 🌬  ", subset_alerta$pollutant[3], ":  ", subset_alerta$concentration[3], " ", unidade,
"\n 🌬  ", subset_alerta$pollutant[6], ":  ", subset_alerta$concentration[6], " ", unidade,
"\n 🌬  ", subset_alerta$pollutant[2], ":  ", subset_alerta$concentration[2], " ", unidade,
"\n🗓 Registro: ", registro,
"\n🚨 ALERTA: Valor(es) excede(m) o limite recomendado!\n"
)
} else {
paste0(
"\n Poluente: \n 🌬  ", subset_alerta$pollutant[4], ":  ", subset_alerta$concentration[4], " ", unidade,
"\n 🌬  ", subset_alerta$pollutant[5], ":  ", subset_alerta$concentration[5], " ", unidade,
"\n 🌬  ", subset_alerta$pollutant[1], ":  ", subset_alerta$concentration[1], " ", unidade,
"\n 🌬  ", subset_alerta$pollutant[3], ":  ", subset_alerta$concentration[3], " ", unidade,
"\n 🌬  ", subset_alerta$pollutant[6], ":  ", subset_alerta$concentration[6], " ", unidade,
"\n 🌬  ", subset_alerta$pollutant[2], ":  ", subset_alerta$concentration[2], " ", unidade,
"\n🗓 Registro: ", registro,
"\n✅ Valor dentro do limite recomendado.\n"
)
}
out[[i]]$message <- message
}
}
out[[i]]$qualidade <- paste0("\n *Qualidade do Ar* (IQA): \n *", qualidade, "* nas últimas 24h ⚠️")
}
output <- dplyr::bind_rows(out)
View(output)
View(data_thermo_instantaneo)
((City != "Rio Branco do Sul" | !(hoje %in% data_thermo_instantaneo$date[data_thermo_instantaneo$Cidade == "Rio Branco do Sul"])) |
(City != "Almirante Tamandaré" | !(hoje %in% data_thermo_instantaneo$date[data_thermo_instantaneo$Cidade == "Almirante Tamandaré"])))
(!(
(City == "Rio Branco do Sul" & hoje %in% data_thermo_instantaneo$date[data_thermo_instantaneo$Cidade == "Rio Branco do Sul"]) |
(City == "Almirante Tamandaré" & hoje %in% data_thermo_instantaneo$date[data_thermo_instantaneo$Cidade == "Almirante Tamandaré"])
))
# Condition for Rio Branco do Sul
cond_rio <- (City == "Rio Branco do Sul" &
hoje %in% data_thermo_instantaneo$date[data_thermo_instantaneo$Cidade == "Rio Branco do Sul"])
# Condition for Almirante Tamandaré
cond_tamandare <- (City == "Almirante Tamandaré" &
hoje %in% data_thermo_instantaneo$date[data_thermo_instantaneo$Cidade == "Almirante Tamandaré"])
(City %in% c("Rio Branco do Sul", "Almirante Tamandaré") & !(cond_rio | cond_tamandare))
City
City != "Rio Branco do Sul"
!(hoje %in% data_thermo_instantaneo$date[data_thermo_instantaneo$Cidade == "Rio Branco do Sul"]))
!(hoje %in% data_thermo_instantaneo$date[data_thermo_instantaneo$Cidade == "Rio Branco do Sul"])
hoje
View(data_thermo_instantaneo)
(hoje %in% data_thermo_instantaneo$date[data_thermo_instantaneo$Cidade == "Rio Branco do Sul"])
tz(data_thermo_instantaneo$date)
lubridate::tz(data_thermo_instantaneo$date)
# Condition for Rio Branco do Sul
cond_rio <- (City == "Rio Branco do Sul" &
hoje %in% as.Date(data_thermo_instantaneo$date)[data_thermo_instantaneo$Cidade == "Rio Branco do Sul"])
# Condition for Almirante Tamandaré
cond_tamandare <- (City == "Almirante Tamandaré" &
hoje %in% as.Date(data_thermo_instantaneo$date)[data_thermo_instantaneo$Cidade == "Almirante Tamandaré"])
(City %in% c("Rio Branco do Sul", "Almirante Tamandaré") & !(cond_rio | cond_tamandare))
# Condition for Rio Branco do Sul
cond_rio <- (City == "Rio Branco do Sul" &
hoje %in% as.Date(data_thermo_instantaneo$date)[data_thermo_instantaneo$Cidade == "Rio Branco do Sul"])
# Condition for Almirante Tamandaré
cond_tamandare <- (City == "Almirante Tamandaré" &
hoje %in% as.Date(data_thermo_instantaneo$date)[data_thermo_instantaneo$Cidade == "Almirante Tamandaré"])
(City != "Rio Branco do Sul" | !(hoje %in% data_thermo_instantaneo$date[data_thermo_instantaneo$Cidade == "Rio Branco do Sul"])) |
(City != "Almirante Tamandaré" | !(hoje %in% data_thermo_instantaneo$date[data_thermo_instantaneo$Cidade == "Almirante Tamandaré"])))
((City != "Rio Branco do Sul" | !(hoje %in% data_thermo_instantaneo$date[data_thermo_instantaneo$Cidade == "Rio Branco do Sul"])) |
(City != "Almirante Tamandaré" | !(hoje %in% data_thermo_instantaneo$date[data_thermo_instantaneo$Cidade == "Almirante Tamandaré"]))
)
hoje %in% as.Date(data_thermo_instantaneo$date)[data_thermo_instantaneo$Cidade == "Rio Branco do Sul"])
hoje %in% as.Date(data_thermo_instantaneo$date)[data_thermo_instantaneo$Cidade == "Rio Branco do Sul"]
as.Date(data_thermo_instantaneo$date)
as.Date(data_thermo_instantaneo$date)[data_thermo_instantaneo$Cidade == "Rio Branco do Sul"]
lubridate(as.Date(data_thermo_instantaneo$date))
lubridate::tz(as.Date(data_thermo_instantaneo$date))
lubridate::tz((data_thermo_instantaneo$date))
as.Date(data_thermo_instantaneo$date, tz = "America/Sao_Paulo")
lubridate::tz(data_thermo_instantaneo$date)
dt_instantaneo <- data_thermo_instantaneo |>
dplyr::mutate(date = lubridate::force_tz(date, tz = "America/Sao_Paulo"))
dt_instantaneo$date
View(data_thermo_instantaneo)
data_thermo_instantaneo$date
dt_instantaneo <- data_thermo_instantaneo |>
dplyr::mutate(date = as.Date(lubridate::force_tz(date, tz = "America/Sao_Paulo")))
View(data_thermo_instantaneo)
dt_instantaneo$date
data_thermo_instantaneo$date |> as.Date()
View(data_thermo_instantaneo)
((City != "Rio Branco do Sul" | !(hoje %in% dt_instantaneo$date[dt_instantaneo$Cidade == "Rio Branco do Sul"])) |
(City != "Almirante Tamandaré" | !(hoje %in% dt_instantaneo$date[dt_instantaneo$Cidade == "Almirante Tamandaré"])))
((City != "Rio Branco do Sul" | !(hoje %in% dt_instantaneo$date[dt_instantaneo$Cidade == "Rio Branco do Sul"])) &
(City != "Almirante Tamandaré" | !(hoje %in% dt_instantaneo$date[dt_instantaneo$Cidade == "Almirante Tamandaré"])))
hoje %in% dt_instantaneo$date[dt_instantaneo$Cidade == "Rio Branco do Sul"])
((City != "Rio Branco do Sul" | !(hoje %in% dt_instantaneo$date[dt_instantaneo$Cidade == "Rio Branco do Sul"]))
!(hoje %in% dt_instantaneo$date[dt_instantaneo$Cidade == "Rio Branco do Sul"])
hoje
dt_instantaneo$date
hoje
as.Date(hoje)
if ((City != "Rio Branco do Sul" | !(as.Date(hoje) %in% dt_instantaneo$date[dt_instantaneo$Cidade == "Rio Branco do Sul"])) &
(City != "Almirante Tamandaré" | !(as.Date(hoje) %in% dt_instantaneo$date[dt_instantaneo$Cidade == "Almirante Tamandaré"]))) {
out <- vector("list", length(unique(alerta$pollutant)))
} else {
out <- vector("list", nrow(IQA_last24H))  # Initialize the list
}
!(as.Date(hoje) %in% dt_instantaneo$date[dt_instantaneo$Cidade == "Rio Branco do Sul"])
if ((City != "Rio Branco do Sul" | !(as.Date(hoje) %in% data_thermo_instantaneo$date[data_thermo_instantaneo$Cidade == "Rio Branco do Sul"])) &
(City != "Almirante Tamandaré" | !(as.Date(hoje) %in% data_thermo_instantaneo$date[data_thermo_instantaneo$Cidade == "Almirante Tamandaré"]))) {
subset_alerta <- alerta |> subset(Cidade == City & pollutant == "PM2.5") |>
dplyr::mutate(concentration = round(concentration, 1))
if (nrow(subset_alerta) == 0) next  # Skip if empty
if (is.null(out[[i]])) out[[i]] <- list()  # Ensure the list exists
excede <- ifelse(rlang::is_empty(subset_alerta$limite), "não medido", subset_alerta$limite)
particulas <- 'MP2.5'
valor <- subset_alerta$concentration
registro <- unique(lubridate::ymd_hms(subset_alerta$date)) |>
lubridate::force_tz("America/Sao_Paulo") |>
format(format = "%d/%m/%Y %H:%Mh")
unidade <- " µg/m³"
iqa <- IQA_last24H$AQI[IQA_last24H$Cidade == subset_alerta$Cidade]
qualidade <- IQA_last24H$AQI_Qualidade[IQA_last24H$Cidade == subset_alerta$Cidade] |>
stringr::str_to_upper()
out[[i]]$Cidade <- subset_alerta$Cidade
current_value <- ifelse(excede >= 1, 1, 0)
message <- if (current_value >= threshold) {
paste0(
"\n🌬 Poluente: \n   ", particulas, ": ", valor, unidade,
"\n🗓 Registro: ", registro,
"\n🚨 ALERTA: Valor excede o limite recomendado!"
)
} else {
paste0(
"\n🌬 Poluente: \n   ", particulas, ": ", valor, unidade,
"\n🗓 Registro: ", registro,
"\n✅ Valor dentro do limite recomendado.\n"
)
}
out[[i]]$message <- message
} else {
subset_alerta <- alerta |> subset(Cidade == City) |>
dplyr::mutate(concentration = round(concentration, 1)) |>
dplyr::mutate(pollutant = replace(pollutant, pollutant == 'PM2.5', "MP2.5"),
pollutant = replace(pollutant, pollutant == 'PM10', "MP10"))
if (nrow(subset_alerta) == 0) next  # Skip if empty
if (is.null(out[[i]])) out[[i]] <- list()  # Ensure the list exists
excede <- sum(subset_alerta$limite, na.rm = T)
if (j > nrow(subset_alerta)) next  # Avoid out-of-bounds error
valor <- subset_alerta$concentration[j]
registro <- lubridate::ymd_hms(subset_alerta$date)[j] |>
lubridate::force_tz("America/Sao_Paulo") |>
format(format = "%d/%m/%Y %H:%Mh")
unidade <- ifelse(subset_alerta$pollutant[j] == "CO", " mg/m³", " µg/m³")
Cidade <- subset_alerta$Cidade |> unique()
iqa <- IQA_last24H$AQI[IQA_last24H$Cidade == Cidade]
qualidade <- IQA_last24H$AQI_Qualidade[IQA_last24H$Cidade == Cidade] |>
stringr::str_to_upper()
out[[i]]$Cidade <- Cidade
current_value <- ifelse(excede >= 1, 1, 0)
message <- if (current_value >= threshold) {
paste0(
"\n Poluente: \n 🌬  ", subset_alerta$pollutant[4], ":  ", subset_alerta$concentration[4], " ", unidade,
"\n 🌬  ", subset_alerta$pollutant[5], ":  ", subset_alerta$concentration[5], " ", unidade,
"\n 🌬  ", subset_alerta$pollutant[1], ":  ", subset_alerta$concentration[1], " ", unidade,
"\n 🌬  ", subset_alerta$pollutant[3], ":  ", subset_alerta$concentration[3], " ", unidade,
"\n 🌬  ", subset_alerta$pollutant[6], ":  ", subset_alerta$concentration[6], " ", unidade,
"\n 🌬  ", subset_alerta$pollutant[2], ":  ", subset_alerta$concentration[2], " ", unidade,
"\n🗓 Registro: ", registro,
"\n🚨 ALERTA: Valor(es) excede(m) o limite recomendado!\n"
)
} else {
paste0(
"\n Poluente: \n 🌬  ", subset_alerta$pollutant[4], ":  ", subset_alerta$concentration[4], " ", unidade,
"\n 🌬  ", subset_alerta$pollutant[5], ":  ", subset_alerta$concentration[5], " ", unidade,
"\n 🌬  ", subset_alerta$pollutant[1], ":  ", subset_alerta$concentration[1], " ", unidade,
"\n 🌬  ", subset_alerta$pollutant[3], ":  ", subset_alerta$concentration[3], " ", unidade,
"\n 🌬  ", subset_alerta$pollutant[6], ":  ", subset_alerta$concentration[6], " ", unidade,
"\n 🌬  ", subset_alerta$pollutant[2], ":  ", subset_alerta$concentration[2], " ", unidade,
"\n🗓 Registro: ", registro,
"\n✅ Valor dentro do limite recomendado.\n"
)
}
out[[i]]$message <- message
}
for (j in 1:length(unique(alerta$pollutant))) {
City <- Cidades[i]
print(paste("City:", City))  # Debugging
print(paste("Iteração", i, "- Cidade:", City))
if ((City != "Rio Branco do Sul" | !(as.Date(hoje) %in% data_thermo_instantaneo$date[data_thermo_instantaneo$Cidade == "Rio Branco do Sul"])) &
(City != "Almirante Tamandaré" | !(as.Date(hoje) %in% data_thermo_instantaneo$date[data_thermo_instantaneo$Cidade == "Almirante Tamandaré"]))) {
subset_alerta <- alerta |> subset(Cidade == City & pollutant == "PM2.5") |>
dplyr::mutate(concentration = round(concentration, 1))
if (nrow(subset_alerta) == 0) next  # Skip if empty
if (is.null(out[[i]])) out[[i]] <- list()  # Ensure the list exists
excede <- ifelse(rlang::is_empty(subset_alerta$limite), "não medido", subset_alerta$limite)
particulas <- 'MP2.5'
valor <- subset_alerta$concentration
registro <- unique(lubridate::ymd_hms(subset_alerta$date)) |>
lubridate::force_tz("America/Sao_Paulo") |>
format(format = "%d/%m/%Y %H:%Mh")
unidade <- " µg/m³"
iqa <- IQA_last24H$AQI[IQA_last24H$Cidade == subset_alerta$Cidade]
qualidade <- IQA_last24H$AQI_Qualidade[IQA_last24H$Cidade == subset_alerta$Cidade] |>
stringr::str_to_upper()
out[[i]]$Cidade <- subset_alerta$Cidade
current_value <- ifelse(excede >= 1, 1, 0)
message <- if (current_value >= threshold) {
paste0(
"\n🌬 Poluente: \n   ", particulas, ": ", valor, unidade,
"\n🗓 Registro: ", registro,
"\n🚨 ALERTA: Valor excede o limite recomendado!"
)
} else {
paste0(
"\n🌬 Poluente: \n   ", particulas, ": ", valor, unidade,
"\n🗓 Registro: ", registro,
"\n✅ Valor dentro do limite recomendado.\n"
)
}
out[[i]]$message <- message
} else {
subset_alerta <- alerta |> subset(Cidade == City) |>
dplyr::mutate(concentration = round(concentration, 1)) |>
dplyr::mutate(pollutant = replace(pollutant, pollutant == 'PM2.5', "MP2.5"),
pollutant = replace(pollutant, pollutant == 'PM10', "MP10"))
if (nrow(subset_alerta) == 0) next  # Skip if empty
if (is.null(out[[i]])) out[[i]] <- list()  # Ensure the list exists
excede <- sum(subset_alerta$limite, na.rm = T)
if (j > nrow(subset_alerta)) next  # Avoid out-of-bounds error
valor <- subset_alerta$concentration[j]
registro <- lubridate::ymd_hms(subset_alerta$date)[j] |>
lubridate::force_tz("America/Sao_Paulo") |>
format(format = "%d/%m/%Y %H:%Mh")
unidade <- ifelse(subset_alerta$pollutant[j] == "CO", " mg/m³", " µg/m³")
Cidade <- subset_alerta$Cidade |> unique()
iqa <- IQA_last24H$AQI[IQA_last24H$Cidade == Cidade]
qualidade <- IQA_last24H$AQI_Qualidade[IQA_last24H$Cidade == Cidade] |>
stringr::str_to_upper()
out[[i]]$Cidade <- Cidade
current_value <- ifelse(excede >= 1, 1, 0)
message <- if (current_value >= threshold) {
paste0(
"\n Poluente: \n 🌬  ", subset_alerta$pollutant[4], ":  ", subset_alerta$concentration[4], " ", unidade,
"\n 🌬  ", subset_alerta$pollutant[5], ":  ", subset_alerta$concentration[5], " ", unidade,
"\n 🌬  ", subset_alerta$pollutant[1], ":  ", subset_alerta$concentration[1], " ", unidade,
"\n 🌬  ", subset_alerta$pollutant[3], ":  ", subset_alerta$concentration[3], " ", unidade,
"\n 🌬  ", subset_alerta$pollutant[6], ":  ", subset_alerta$concentration[6], " ", unidade,
"\n 🌬  ", subset_alerta$pollutant[2], ":  ", subset_alerta$concentration[2], " ", unidade,
"\n🗓 Registro: ", registro,
"\n🚨 ALERTA: Valor(es) excede(m) o limite recomendado!\n"
)
} else {
paste0(
"\n Poluente: \n 🌬  ", subset_alerta$pollutant[4], ":  ", subset_alerta$concentration[4], " ", unidade,
"\n 🌬  ", subset_alerta$pollutant[5], ":  ", subset_alerta$concentration[5], " ", unidade,
"\n 🌬  ", subset_alerta$pollutant[1], ":  ", subset_alerta$concentration[1], " ", unidade,
"\n 🌬  ", subset_alerta$pollutant[3], ":  ", subset_alerta$concentration[3], " ", unidade,
"\n 🌬  ", subset_alerta$pollutant[6], ":  ", subset_alerta$concentration[6], " ", unidade,
"\n 🌬  ", subset_alerta$pollutant[2], ":  ", subset_alerta$concentration[2], " ", unidade,
"\n🗓 Registro: ", registro,
"\n✅ Valor dentro do limite recomendado.\n"
)
}
out[[i]]$message <- message
}
}
out <- vector("list", nrow(IQA_last24H))  # Initialize the list
for (i in 1:nrow(IQA_last24H)) {
for (j in 1:length(unique(alerta$pollutant))) {
City <- Cidades[i]
print(paste("City:", City))  # Debugging
print(paste("Iteração", i, "- Cidade:", City))
if ((City != "Rio Branco do Sul" | !(as.Date(hoje) %in% data_thermo_instantaneo$date[data_thermo_instantaneo$Cidade == "Rio Branco do Sul"])) &
(City != "Almirante Tamandaré" | !(as.Date(hoje) %in% data_thermo_instantaneo$date[data_thermo_instantaneo$Cidade == "Almirante Tamandaré"]))) {
subset_alerta <- alerta |> subset(Cidade == City & pollutant == "PM2.5") |>
dplyr::mutate(concentration = round(concentration, 1))
if (nrow(subset_alerta) == 0) next  # Skip if empty
if (is.null(out[[i]])) out[[i]] <- list()  # Ensure the list exists
excede <- ifelse(rlang::is_empty(subset_alerta$limite), "não medido", subset_alerta$limite)
particulas <- 'MP2.5'
valor <- subset_alerta$concentration
registro <- unique(lubridate::ymd_hms(subset_alerta$date)) |>
lubridate::force_tz("America/Sao_Paulo") |>
format(format = "%d/%m/%Y %H:%Mh")
unidade <- " µg/m³"
iqa <- IQA_last24H$AQI[IQA_last24H$Cidade == subset_alerta$Cidade]
qualidade <- IQA_last24H$AQI_Qualidade[IQA_last24H$Cidade == subset_alerta$Cidade] |>
stringr::str_to_upper()
out[[i]]$Cidade <- subset_alerta$Cidade
current_value <- ifelse(excede >= 1, 1, 0)
message <- if (current_value >= threshold) {
paste0(
"\n🌬 Poluente: \n   ", particulas, ": ", valor, unidade,
"\n🗓 Registro: ", registro,
"\n🚨 ALERTA: Valor excede o limite recomendado!"
)
} else {
paste0(
"\n🌬 Poluente: \n   ", particulas, ": ", valor, unidade,
"\n🗓 Registro: ", registro,
"\n✅ Valor dentro do limite recomendado.\n"
)
}
out[[i]]$message <- message
} else {
subset_alerta <- alerta |> subset(Cidade == City) |>
dplyr::mutate(concentration = round(concentration, 1)) |>
dplyr::mutate(pollutant = replace(pollutant, pollutant == 'PM2.5', "MP2.5"),
pollutant = replace(pollutant, pollutant == 'PM10', "MP10"))
if (nrow(subset_alerta) == 0) next  # Skip if empty
if (is.null(out[[i]])) out[[i]] <- list()  # Ensure the list exists
excede <- sum(subset_alerta$limite, na.rm = T)
if (j > nrow(subset_alerta)) next  # Avoid out-of-bounds error
valor <- subset_alerta$concentration[j]
registro <- lubridate::ymd_hms(subset_alerta$date)[j] |>
lubridate::force_tz("America/Sao_Paulo") |>
format(format = "%d/%m/%Y %H:%Mh")
unidade <- ifelse(subset_alerta$pollutant[j] == "CO", " mg/m³", " µg/m³")
Cidade <- subset_alerta$Cidade |> unique()
iqa <- IQA_last24H$AQI[IQA_last24H$Cidade == Cidade]
qualidade <- IQA_last24H$AQI_Qualidade[IQA_last24H$Cidade == Cidade] |>
stringr::str_to_upper()
out[[i]]$Cidade <- Cidade
current_value <- ifelse(excede >= 1, 1, 0)
message <- if (current_value >= threshold) {
paste0(
"\n Poluente: \n 🌬  ", subset_alerta$pollutant[4], ":  ", subset_alerta$concentration[4], " ", unidade,
"\n 🌬  ", subset_alerta$pollutant[5], ":  ", subset_alerta$concentration[5], " ", unidade,
"\n 🌬  ", subset_alerta$pollutant[1], ":  ", subset_alerta$concentration[1], " ", unidade,
"\n 🌬  ", subset_alerta$pollutant[3], ":  ", subset_alerta$concentration[3], " ", unidade,
"\n 🌬  ", subset_alerta$pollutant[6], ":  ", subset_alerta$concentration[6], " ", unidade,
"\n 🌬  ", subset_alerta$pollutant[2], ":  ", subset_alerta$concentration[2], " ", unidade,
"\n🗓 Registro: ", registro,
"\n🚨 ALERTA: Valor(es) excede(m) o limite recomendado!\n"
)
} else {
paste0(
"\n Poluente: \n 🌬  ", subset_alerta$pollutant[4], ":  ", subset_alerta$concentration[4], " ", unidade,
"\n 🌬  ", subset_alerta$pollutant[5], ":  ", subset_alerta$concentration[5], " ", unidade,
"\n 🌬  ", subset_alerta$pollutant[1], ":  ", subset_alerta$concentration[1], " ", unidade,
"\n 🌬  ", subset_alerta$pollutant[3], ":  ", subset_alerta$concentration[3], " ", unidade,
"\n 🌬  ", subset_alerta$pollutant[6], ":  ", subset_alerta$concentration[6], " ", unidade,
"\n 🌬  ", subset_alerta$pollutant[2], ":  ", subset_alerta$concentration[2], " ", unidade,
"\n🗓 Registro: ", registro,
"\n✅ Valor dentro do limite recomendado.\n"
)
}
out[[i]]$message <- message
}
}
out[[i]]$qualidade <- paste0("\n *Qualidade do Ar* (IQA): \n *", qualidade, "* nas últimas 24h ⚠️")
}
output <- dplyr::bind_rows(out)
View(output)
out <- vector("list", nrow(IQA_last24H))  # Initialize the list
for (i in 1:nrow(IQA_last24H)) {
for (j in 1:length(unique(alerta$pollutant))) {
City <- Cidades[i]
print(paste("City:", City))  # Debugging
print(paste("Iteração", i, "- Cidade:", City))
if ((City != "Rio Branco do Sul" | !(as.Date(hoje) %in% as.Date(data_thermo_instantaneo$date)[data_thermo_instantaneo$Cidade == "Rio Branco do Sul"])) &
(City != "Almirante Tamandaré" | !(as.Date(hoje) %in% as.Date(data_thermo_instantaneo$date)[data_thermo_instantaneo$Cidade == "Almirante Tamandaré"]))) {
subset_alerta <- alerta |> subset(Cidade == City & pollutant == "PM2.5") |>
dplyr::mutate(concentration = round(concentration, 1))
if (nrow(subset_alerta) == 0) next  # Skip if empty
if (is.null(out[[i]])) out[[i]] <- list()  # Ensure the list exists
excede <- ifelse(rlang::is_empty(subset_alerta$limite), "não medido", subset_alerta$limite)
particulas <- 'MP2.5'
valor <- subset_alerta$concentration
registro <- unique(lubridate::ymd_hms(subset_alerta$date)) |>
lubridate::force_tz("America/Sao_Paulo") |>
format(format = "%d/%m/%Y %H:%Mh")
unidade <- " µg/m³"
iqa <- IQA_last24H$AQI[IQA_last24H$Cidade == subset_alerta$Cidade]
qualidade <- IQA_last24H$AQI_Qualidade[IQA_last24H$Cidade == subset_alerta$Cidade] |>
stringr::str_to_upper()
out[[i]]$Cidade <- subset_alerta$Cidade
current_value <- ifelse(excede >= 1, 1, 0)
message <- if (current_value >= threshold) {
paste0(
"\n🌬 Poluente: \n   ", particulas, ": ", valor, unidade,
"\n🗓 Registro: ", registro,
"\n🚨 ALERTA: Valor excede o limite recomendado!"
)
} else {
paste0(
"\n🌬 Poluente: \n   ", particulas, ": ", valor, unidade,
"\n🗓 Registro: ", registro,
"\n✅ Valor dentro do limite recomendado.\n"
)
}
out[[i]]$message <- message
} else {
subset_alerta <- alerta |> subset(Cidade == City) |>
dplyr::mutate(concentration = round(concentration, 1)) |>
dplyr::mutate(pollutant = replace(pollutant, pollutant == 'PM2.5', "MP2.5"),
pollutant = replace(pollutant, pollutant == 'PM10', "MP10"))
if (nrow(subset_alerta) == 0) next  # Skip if empty
if (is.null(out[[i]])) out[[i]] <- list()  # Ensure the list exists
excede <- sum(subset_alerta$limite, na.rm = T)
if (j > nrow(subset_alerta)) next  # Avoid out-of-bounds error
valor <- subset_alerta$concentration[j]
registro <- lubridate::ymd_hms(subset_alerta$date)[j] |>
lubridate::force_tz("America/Sao_Paulo") |>
format(format = "%d/%m/%Y %H:%Mh")
unidade <- ifelse(subset_alerta$pollutant[j] == "CO", " mg/m³", " µg/m³")
Cidade <- subset_alerta$Cidade |> unique()
iqa <- IQA_last24H$AQI[IQA_last24H$Cidade == Cidade]
qualidade <- IQA_last24H$AQI_Qualidade[IQA_last24H$Cidade == Cidade] |>
stringr::str_to_upper()
out[[i]]$Cidade <- Cidade
current_value <- ifelse(excede >= 1, 1, 0)
message <- if (current_value >= threshold) {
paste0(
"\n Poluente: \n 🌬  ", subset_alerta$pollutant[4], ":  ", subset_alerta$concentration[4], " ", unidade,
"\n 🌬  ", subset_alerta$pollutant[5], ":  ", subset_alerta$concentration[5], " ", unidade,
"\n 🌬  ", subset_alerta$pollutant[1], ":  ", subset_alerta$concentration[1], " ", unidade,
"\n 🌬  ", subset_alerta$pollutant[3], ":  ", subset_alerta$concentration[3], " ", unidade,
"\n 🌬  ", subset_alerta$pollutant[6], ":  ", subset_alerta$concentration[6], " ", unidade,
"\n 🌬  ", subset_alerta$pollutant[2], ":  ", subset_alerta$concentration[2], " ", unidade,
"\n🗓 Registro: ", registro,
"\n🚨 ALERTA: Valor(es) excede(m) o limite recomendado!\n"
)
} else {
paste0(
"\n Poluente: \n 🌬  ", subset_alerta$pollutant[4], ":  ", subset_alerta$concentration[4], " ", unidade,
"\n 🌬  ", subset_alerta$pollutant[5], ":  ", subset_alerta$concentration[5], " ", unidade,
"\n 🌬  ", subset_alerta$pollutant[1], ":  ", subset_alerta$concentration[1], " ", unidade,
"\n 🌬  ", subset_alerta$pollutant[3], ":  ", subset_alerta$concentration[3], " ", unidade,
"\n 🌬  ", subset_alerta$pollutant[6], ":  ", subset_alerta$concentration[6], " ", unidade,
"\n 🌬  ", subset_alerta$pollutant[2], ":  ", subset_alerta$concentration[2], " ", unidade,
"\n🗓 Registro: ", registro,
"\n✅ Valor dentro do limite recomendado.\n"
)
}
out[[i]]$message <- message
}
}
out[[i]]$qualidade <- paste0("\n *Qualidade do Ar* (IQA): \n *", qualidade, "* nas últimas 24h ⚠️")
}
output <- dplyr::bind_rows(out)
View(output)
## or store it manually in '.Renviron':
usethis::edit_r_environ()
